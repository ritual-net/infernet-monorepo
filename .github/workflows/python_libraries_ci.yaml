# pre-commit workflow for Infernet Monorepo

name: Python Libraries CI

on:
  pull_request:
    paths:
      - 'libraries/**'
      - '.github/workflows/python_libraries_ci.yaml'

jobs:
  monorepo_ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [ "infernet_client", "infernet_ml", "ritual_arweave" ]
        python-version: [ "3.10", "3.11" ]
      fail-fast: false

    steps:
      - name: Check for library changes
        id: check_changes
        run: |
          if ! git diff --name-only HEAD^ HEAD | grep "^libraries/${{ matrix.library }}/"; then 
            echo "No changes in libraries/${{ matrix.library }}/"; 
            echo "skip_job=true" >> $GITHUB_ENV; 
          else 
            echo "skip_job=false" >> $GITHUB_ENV;
          fi

      - name: Skip further steps if SKIP_JOB is set
        run: |
          if [ "$skip_job" == "true" ]; then
            echo "Skipping job because no changes were detected for libraries/${{ matrix.library }}"
            exit 0
          fi

      - uses: webfactory/ssh-agent@v0.9.0
        if: env.skip_job == 'false'
        with:
          ssh-private-key: ${{ secrets.SSH_GH_ACTIONS }}

      - name: Checkout
        if: env.skip_job == 'false'
        uses: actions/checkout@v4

      # pull submodules manually since some are private
      - name: Get submodules
        if: env.skip_job == 'false'
        run: make get-submodules

      - name: Set up Cloud SDK
        if: env.skip_job == 'false'
        uses: google-github-actions/setup-gcloud@v2

      - name: init repo
        if: env.skip_job == 'false'
        run: |
          echo '${{ secrets.SECRETS_SA }}' > secrets-sa-key.json
          gcloud auth activate-service-account --key-file=secrets-sa-key.json
          make init-repo
        env:
          CI: true

      - name: Set up Python
        if: env.skip_job == 'false'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        if: env.skip_job == 'false'
        run: python -m pip install uv

      - name: Create virtual environment
        if: env.skip_job == 'false'
        run: uv venv

      - name: Activate virtual environment
        if: env.skip_job == 'false'
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Get UV env file
        if: env.skip_job == 'false'
        run: make generate-uv-env-file export_prefix="" && cat uv.env >> $GITHUB_ENV

      # first line is the project's specific dependencies,
      - name: Install dependencies
        if: env.skip_job == 'false'
        run: |
          uv pip install --extra-index-url `make get-index-url` -r libraries/${{ matrix.library }}/requirements.lock
          uv pip install --extra-index-url `make get-index-url` -r pyproject.toml

      # useful for debugging CI
#      - name: Setup upterm session
#        if: matrix.library == 'ritual_arweave'
#        uses: lhotari/action-upterm@v1

      - name: Run pre-commit hooks
        if: env.skip_job == 'false'
        env:
          CI: true
        run: make pre-commit-library library=${{ matrix.library }}

      - name: Run tests
        if: env.skip_job == 'false'
        env:
          # We need to list the env vars here again for them to get filtered out in logs
          PYTHONPATH: libraries/${{ matrix.library }}/src
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          MODEL_OWNER: ${{ secrets.MODEL_OWNER }}
          GOOSEAI_API_KEY: ${{ secrets.GOOSEAI_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PERPLEXITYAI_API_KEY: ${{ secrets.PERPLEXITYAI_API_KEY }}

        run: make test-library library=${{ matrix.library }}

      - name: Cleanup Secrets
        run: rm secrets-sa-key.json || true
        if: always()

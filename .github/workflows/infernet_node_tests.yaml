# pre-commit workflow
#
# Ensures the codebase passes the pre-commit stack.

name: Infernet Node E2E Tests

on:
  schedule:
    - cron: '0 0 * * 2-6' # every day at midnight, Tue-Sat
  pull_request:
  workflow_dispatch:
    inputs:
      docker-tag:
        description: 'Infernet Node Docker tag'
        required: true
        type: string
        default: '1.3.1'

jobs:
  infernet-node-tests:
    runs-on: buildjet-8vcpu-ubuntu-2204
    timeout-minutes: 15
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_GH_ACTIONS }}

      - name: Checkout
        uses: actions/checkout@v4

      # pull submodules manually since some are private
      - run: |
          git submodule sync --recursive
          git -c protocol.version=2 submodule update --init --force --recursive

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: init repo
        run: |
          echo '${{ secrets.SECRETS_SA }}' > secrets-sa-key.json
          gcloud auth activate-service-account --key-file=secrets-sa-key.json
          make init-repo
        env:
          CI: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Print Docker Tag
        run: |
          echo "Docker tag: ${{ github.event.inputs.docker-tag }}"

      - name: Pull service images
        env:
          # use default Docker tag if it's not specified
          INFERNET_NODE_TAG: ${{ github.event.inputs.docker-tag || '1.3.1' }}
        run: |
          docker compose -f infernet_services/deploy/docker-compose.yaml pull
          docker pull "ritualnetwork/infernet-anvil:1.0.0"

      - name: Build the container
        env:
          CI: true
        run: make build-echo

      - name: Install UV
        run: python -m pip install uv

      - name: Run tests
        env:
          CI: true
          restart_env: true
          # use default Docker tag if it's not specified
          INFERNET_NODE_TAG: ${{ github.event.inputs.docker-tag || '1.3.1' }}
        run: make test-infernet-node


      - name: Cleanup Secrets
        run: rm secrets-sa-key.json
        if: always()
